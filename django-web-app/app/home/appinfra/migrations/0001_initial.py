# Generated by Django 5.2.2 on 2025-06-05 20:19

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('brand', models.CharField(max_length=100, verbose_name='marque')),
                ('description', models.CharField(max_length=1000, verbose_name='description')),
            ],
        ),
        migrations.CreateModel(
            name='Place',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='nom')),
                ('place', models.CharField(max_length=100, verbose_name='adresse')),
                ('population', models.IntegerField(verbose_name='population')),
                ('latitude', models.CharField(max_length=100, verbose_name='latitude')),
                ('longitude', models.CharField(max_length=100, verbose_name='longitude')),
                ('description', models.CharField(max_length=1000, verbose_name='description')),
            ],
        ),
        migrations.CreateModel(
            name='Platform',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='nom')),
                ('description', models.CharField(max_length=1000, verbose_name='description')),
            ],
        ),
        migrations.CreateModel(
            name='Provider',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('brand', models.CharField(max_length=100, verbose_name='marque')),
                ('description', models.CharField(max_length=1000, verbose_name='description')),
            ],
        ),
        migrations.CreateModel(
            name='Type_connexion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='nom')),
                ('description', models.CharField(max_length=1000, verbose_name='description')),
            ],
        ),
        migrations.CreateModel(
            name='Type_equipment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='nom')),
                ('description', models.CharField(max_length=1000, verbose_name='description')),
            ],
        ),
        migrations.CreateModel(
            name='Typologie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='nom')),
                ('description', models.CharField(max_length=1000, verbose_name='description')),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(choices=[('ADMIN', 'Administrateur'), ('USER', 'Utilisateur standard'), ('GUEST', 'Invité')], default='USER', max_length=20, verbose_name='Rôle')),
                ('phone_number', models.CharField(blank=True, max_length=15, null=True, verbose_name='Numéro de téléphone')),
                ('date_modified', models.DateTimeField(auto_now=True, verbose_name='Date de modification')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Utilisateur',
                'verbose_name_plural': 'Utilisateurs',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Software',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='nom')),
                ('version', models.CharField(max_length=100, verbose_name='version')),
                ('administrator', models.CharField(max_length=100, verbose_name='administrateur')),
                ('description', models.CharField(max_length=1000, verbose_name='description')),
                ('place', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='appinfra.place', verbose_name='adresse')),
                ('platform', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='appinfra.platform', verbose_name='plateforme')),
            ],
        ),
        migrations.CreateModel(
            name='Network',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rank', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(9)], verbose_name='rang')),
                ('rescue', models.BooleanField(default=False, verbose_name='secour')),
                ('description', models.CharField(max_length=1000, verbose_name='description')),
                ('brand', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='appinfra.brand', verbose_name='marque')),
                ('place', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='appinfra.place', verbose_name='adresse')),
                ('provider', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='appinfra.provider', verbose_name='fournisseur')),
                ('connection_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='appinfra.type_connexion', verbose_name='type de connexion')),
            ],
            options={
                'ordering': ['rank'],
            },
        ),
        migrations.CreateModel(
            name='Equipment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='nom')),
                ('quantity', models.IntegerField(default=0, verbose_name='quantité')),
                ('eligible', models.BooleanField(default=False, verbose_name='eligible')),
                ('description', models.CharField(blank=True, max_length=1024, null=True, verbose_name='description')),
                ('brand', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='appinfra.brand', verbose_name='marque')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='appinfra.equipment', verbose_name='parent')),
                ('place', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='appinfra.place', verbose_name='adresse')),
                ('type_equipment', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='appinfra.type_equipment', verbose_name='type équipement')),
            ],
        ),
        migrations.AddField(
            model_name='place',
            name='typology',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='appinfra.typologie', verbose_name='typologie'),
        ),
    ]
